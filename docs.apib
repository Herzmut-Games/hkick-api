FORMAT: 1A

# Kicker-API

This API provides an interface for creating matches and submitting games.

# Group Players

Resources related to Players

## Players collection [/players]

### List all players [GET]
+ Response 200 (application/json)
    [
        {
            "id": 7,
            "first_name": "James",
            "surname": "Bond",
            "nickname": "Mein name ist",
            "team_rating": 1200
            "solo_rating": 1200
        }
    ]

### Create a new player [POST]
+ Request (application/json)
    {
        "first_name": "Enrico",
        "surname": "Palazzo",
        "nickname": "Der gro√üe"
    }
+ Response 200

## Single Player [/players/{player_id}]
+ Parameters
    + player_id (number) - numeric ID of the player

### Get single player [GET]
+ Response 200 (application/json)
    {
        "id": 7,
        "first_name": "James",
        "surname": "Bond",
        "nickname": "Mein name ist",
        "team_rating": 1200
        "solo_rating": 1200
    }

# Group matches

Resources related to matches

## Matches collection [/matches]

### List all matches [GET]
+ Response 200 (application/json)
    [
        {
            "id": 1,
            "team_1": 1,
            "team_2": 2,
            "timestamp": "2019-10-10T10:01:35"
        }
    ]


### Create a new match [POST]
Receives four player ids, returns match id

+ Request (application/json)
    [ 1, 2, 3, 4 ]
+ Response 200 (application/json)
    { "id": 1 }

## Single Match [/matches/{match_id}]
+ Parameters
    + match_id (number) - numeric ID of the match

### Get single match [GET]
+ Response 200 (application/json)
    {
        "id": 1,
        "team_1": 1,
        "team_2": 2,
        "timestamp": "2019-10-10T10:01:35"
    }

## Games [/matches/{match_id}/games]
+ Parameters
    + match_id (number) - numeric ID of the match

### Add game to a match [PUT]
+ Request (application/json)
    {
        "score_1": 5,
        "score_2": 3
    }
+ Response 200

### Get all games of match [GET]
+ Response 200 (application/json)
    {
        "id": 8,
        "match_id": 2,
        "duel_id": null,
        "score_1": 5,
        "score_2": 3,
        "timestamp": "2019-10-29T12:48:25"
    }

# Group duels

Resources related to duels

## Duels collection [/duels]

### List all matches [GET]
+ Response 200 (application/json)
    [
        {
            "id": 1,
            "player_1": 1,
            "player_2": 2,
            "timestamp": "2019-10-10T10:01:35"
        }
    ]


### Create a new duel [POST]
Receives two player ids, returns duel id

+ Request (application/json)
    [ 1, 2 ]
+ Response 200 (application/json)
    { "id": 1 }

## Single Duel [/duels/{duel_id}]
+ Parameters
    + duel_id (number) - numeric ID of the duel

### Get single Duel [GET]
+ Response 200 (application/json)
    {
        "id": 1,
        "player_1": 1,
        "player_2": 2,
        "timestamp": "2019-10-10T10:01:35"
    }

## Games [/duels/{duel_id}/games]
+ Parameters
    + duel_id (number) - numeric ID of the duel

### Add game to a duel [PUT]
+ Request (application/json)
    {
        "score_1": 5,
        "score_2": 3
    }
+ Response 200

### Get all games of duel [GET]
+ Response 200 (application/json)
    [
        {
            "id": 8,
            "duel_id": 2,
            "match_id": null,
            "score_1": 5,
            "score_2": 3,
            "timestamp": "2019-10-29T12:48:25"
        }
    ]
